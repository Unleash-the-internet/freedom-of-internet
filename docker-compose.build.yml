
networks:
  freedom-of-internet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

services:

  openvpn:
    container_name: "openvpn-server"
    hostname: "openvpn-server.${hostname}"
    image: ghcr.io/reloadlife/freedom-of-internet/openvpn
    build:
      context: ./openvpn
      dockerfile: Dockerfile
    env_file:
        - .env
    volumes:
      - ./openvpn/data/:/etc/openvpn
    restart: always
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.default.forwarding=1
      - net.ipv6.conf.all.forwarding=1
    dns:
      - 10.5.0.4
      - 1.1.1.1
    ports:
      - "${OPENVPN_PORT}:1194/udp"
    cap_add:
      - NET_ADMIN
    networks:
      freedom-of-internet:
        ipv4_address: 10.5.0.2

  shadowsocks:
    container_name: "shadowsocks-server"
    hostname: "shadowsocks-server.${hostname}"
    image: ghcr.io/reloadlife/freedom-of-internet/shadowsocks
    build:
      context: ./shadowsocks
      dockerfile: Dockerfile
    env_file:
        - .env
    restart: always
    dns:
      - 10.5.0.4
      - 1.1.1.1
    ports:
      - "${SHADOWSOCKS_PORT}:14574/tcp"
      - "${SHADOWSOCKS_PORT}:14574/udp"
    cap_add:
      - NET_ADMIN
    networks:
      freedom-of-internet:
        ipv4_address: 10.5.0.3

  pihole:
    container_name: "pihole-server"
    hostname: "pihole-server.${hostname}"
    build:
      context: ./DNSProxy
      dockerfile: Dockerfile
    environment:
      ServerIP: "${SERVER_IP}"
      WEBPASSWORD: "${PI_HOLE_PASSWORD}"
    volumes:
      - "./DNSProxy/pihole/pihole/:/etc/pihole/"
      - "./DNSProxy/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    env_file:
        - .env
    restart: always
    dns:
      - 1.1.1.1
      - 8.8.8.8
    ports:
      - "${DNS_PORT}:53/tcp"
      - "${DNS_PORT}:53/udp"
      - "${BOOTP_PORT}:67/udp"
      - "${PI_HOLE_HTTP_PORT}:80/tcp"
    cap_add:
      - NET_ADMIN
    networks:
      freedom-of-internet:
        ipv4_address: 10.5.0.4

  doh:
    container_name: "doh-server"
    hostname: "doh-server.${hostname}"
    build:
      context: ./DOH
      dockerfile: Dockerfile
    env_file:
        - .env
    environment:
      UPSTREAM_DNS_SERVER: "udp:10.5.0.4:53"
      DOH_HTTP_PREFIX: "/dns-query"
      DOH_SERVER_LISTEN: ":${DOH_SERVER_HTTPS_PORT}"
      DOH_SERVER_TIMEOUT: "10"
      DOH_SERVER_TRIES: "3"
      DOH_SERVER_VERBOSE: "false"
    ports:
        - "${DOH_SERVER_HTTPS_PORT}:${DOH_SERVER_HTTPS_PORT}/tcp"
        - "${DOH_SERVER_HTTPS_PORT}:${DOH_SERVER_HTTPS_PORT}/udp"
    networks:
      freedom-of-internet:
        ipv4_address: 10.5.0.5

  mtproto-telegram-proxy:
    container_name: "mtproto-telegram-proxy-server"
    hostname: "mtproto-telegram-proxy-server.${hostname}"
    image: ghcr.io/reloadlife/freedom-of-internet/mtproto-proxy
    build:
      context: ./MTProtoTelegramProxy
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./MTProtoTelegramProxy/config.py:/home/tgproxy/config.py
      - ./MTProtoTelegramProxy/mtprotoproxy.py:/home/tgproxy/mtprotoproxy.py
      - /etc/localtime:/etc/localtime:ro
    network_mode: "host"